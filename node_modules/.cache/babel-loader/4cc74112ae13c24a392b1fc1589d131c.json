{"ast":null,"code":"import axios from \"axios\";\nimport QueryString from \"querystring\";\nconst API_URL = \"https://test-api-cwp.vp-company.nl/connect/token\";\n\nclass AuthService {\n  login(username, password) {\n    return axios.post(API_URL, QueryString.stringify({\n      username,\n      password,\n      grant_type: \"password\"\n    }), {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    }).then(response => {\n      // if (response.data.access_token) {\n      sessionStorage.setItem(\"user\", JSON.stringify(response.data)); // }\n\n      return response.data;\n    });\n  }\n\n  logout() {\n    sessionStorage.removeItem(\"user\");\n  }\n\n  register(username, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      password\n    });\n  }\n\n  getCurrentUser() {\n    const userStr = sessionStorage.getItem(\"user\");\n    if (userStr) return JSON.parse(userStr);\n  }\n\n}\n\nexport default new AuthService();","map":{"version":3,"sources":["C:/Users/srphi/Documents/Projects/1-1Diet/src/services/auth.service.ts"],"names":["axios","QueryString","API_URL","AuthService","login","username","password","post","stringify","grant_type","headers","then","response","sessionStorage","setItem","JSON","data","logout","removeItem","register","getCurrentUser","userStr","getItem","parse"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,MAAMC,OAAO,GAAG,kDAAhB;;AAMA,MAAMC,WAAN,CAAkB;AACdC,EAAAA,KAAK,CAACC,QAAD,EAAmBC,QAAnB,EAAqC;AACtC,WAAON,KAAK,CACPO,IADE,CACGL,OADH,EACaD,WAAW,CAACO,SAAZ,CAAsB;AAClCH,MAAAA,QADkC;AAElCC,MAAAA,QAFkC;AAGlCG,MAAAA,UAAU,EAAE;AAHsB,KAAtB,CADb,EAKA;AACCC,MAAAA,OAAO,EAAE;AAAC,wBAAgB;AAAjB;AADV,KALA,EAQFC,IARE,CAQGC,QAAQ,IAAI;AACd;AACIC,MAAAA,cAAc,CAACC,OAAf,CAAuB,MAAvB,EAA+BC,IAAI,CAACP,SAAL,CAAeI,QAAQ,CAACI,IAAxB,CAA/B,EAFU,CAGd;;AACA,aAAOJ,QAAQ,CAACI,IAAhB;AACH,KAbE,CAAP;AAcH;;AAEDC,EAAAA,MAAM,GAAG;AACLJ,IAAAA,cAAc,CAACK,UAAf,CAA0B,MAA1B;AACH;;AAEDC,EAAAA,QAAQ,CAACd,QAAD,EAAoBC,QAApB,EAAsC;AAC1C,WAAON,KAAK,CAACO,IAAN,CAAWL,OAAO,GAAG,QAArB,EAA+B;AAClCG,MAAAA,QADkC;AAElCC,MAAAA;AAFkC,KAA/B,CAAP;AAIH;;AAEDc,EAAAA,cAAc,GAAG;AACb,UAAMC,OAAO,GAAGR,cAAc,CAACS,OAAf,CAAuB,MAAvB,CAAhB;AACA,QAAID,OAAJ,EAAa,OAAON,IAAI,CAACQ,KAAL,CAAWF,OAAX,CAAP;AAEhB;;AAjCa;;AAoClB,eAAe,IAAIlB,WAAJ,EAAf","sourcesContent":["import axios from \"axios\";\r\nimport QueryString from \"querystring\";\r\nimport redux from \"@reduxjs/toolkit\"\r\nconst API_URL = \"https://test-api-cwp.vp-company.nl/connect/token\";\r\n\r\n\r\n\r\n\r\n\r\nclass AuthService {\r\n    login(username: string, password: string) {\r\n        return axios\r\n            .post(API_URL , QueryString.stringify({\r\n                username,\r\n                password,\r\n                grant_type: \"password\",\r\n            }),{\r\n                headers: {\"Content-Type\": \"application/x-www-form-urlencoded\",}\r\n            })\r\n            .then(response => {\r\n                // if (response.data.access_token) {\r\n                    sessionStorage.setItem(\"user\", JSON.stringify(response.data));\r\n                // }\r\n                return response.data;\r\n            });\r\n    }\r\n\r\n    logout() {\r\n        sessionStorage.removeItem(\"user\");\r\n    }\r\n\r\n    register(username: string,  password: string) {\r\n        return axios.post(API_URL + \"signup\", {\r\n            username,\r\n            password\r\n        });\r\n    }\r\n\r\n    getCurrentUser() {\r\n        const userStr = sessionStorage.getItem(\"user\");\r\n        if (userStr) return JSON.parse(userStr);\r\n\r\n    }\r\n}\r\n\r\nexport default new AuthService();\r\n"]},"metadata":{},"sourceType":"module"}